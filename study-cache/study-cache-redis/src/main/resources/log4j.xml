<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j='http://jakarta.apache.org/log4j/'>

    <!--对于ConsoleAppender来说，在开发阶段还是比较有用的，能直接在ide中看到输出的日志内容，
    但是在实际的产品阶段，我们更希望将日志输出到指定的文件上查看，这就需要用到FileAppender-->
    <appender name="CONSOLE" class="org.apache.log4j.ConsoleAppender">
        <param name="encoding" value="UTF-8"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p %t %l %m%n"/>
        </layout>
        <!--如果有过滤器，当前appender只会处理满足过滤器条件的日志信息-->
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
           <param name="levelMin" value="DEBUG" />
           <param name="levelMax" value="FATAL" />
           <param name="AcceptOnMatch" value="true" />
        </filter>
    </appender>

    <!-- 写到本地日志 -->
    <!--第一步：配置appender-->
    <appender name="INFO-LOCAL" class="org.apache.log4j.DailyRollingFileAppender">
        <param name="file" value="/opt/logs/info.log"/>
        <param name="append" value="true"/><!--一般必须配置true，否则会覆盖而不是累加-->
        <param name="encoding" value="UTF-8"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p %t %l %m%n"/>
        </layout>
        <!--如果有过滤器，日志文件中就只会有符合过滤器的日志信息-->
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="levelMin" value="DEBUG"/>
            <param name="levelMax" value="INFO"/>
            <param name="AcceptOnMatch" value="true"/>
        </filter>
    </appender>
    <appender name="ERROR-LOCAL" class="org.apache.log4j.DailyRollingFileAppender">
        <param name="file" value="/opt/logs/error.log"/>
        <param name="append" value="true"/><!--一般必须配置true，否则会覆盖而不是累加-->
        <param name="encoding" value="UTF-8"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p %t %l %m%n"/>
        </layout>
        <!--如果有过滤器，日志文件中就只会有符合过滤器的日志信息-->
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="levelMin" value="WARN"/>
            <param name="levelMax" value="FATAL"/>
            <param name="AcceptOnMatch" value="true"/>
        </filter>
    </appender>

    <!--第三步：配置root-->
    <!--root的作用是收集所有配置的logger反馈上来的信息流并根据配置在root中appender进行输出，
    只要你在looger中配置了additivity="false"，就不会反馈到root中。-->
    <root>
        <!--优先级小于具体的logger中配置的级别，只有当具体的logger没有配置的时候，
        这里才会对具体的looger起作用-->
        <level value="DEBUG"/>
        <appender-ref ref="CONSOLE"/>
        <!--<appender-ref ref="INFO-LOCAL"/>-->
        <!--<appender-ref ref="ERROR-LOCAL"/>-->
    </root>
</log4j:configuration>